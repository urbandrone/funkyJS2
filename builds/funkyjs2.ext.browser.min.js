/*! funkyjs-2 1.7.1
 *  David Hofmann <the.urban.drone@gmail.com>, MIT license */
/* globals define, module, exports, require */!function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["../type"],b);else if("object"==typeof exports)module.exports=b(require("type"));else{c=b(a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a){function b(a,b){return function(c){if(!b(c))throw new TypeError("enforce(:arg, :type) :: "+c+"is not of type "+a);return c}}var c={};return c.beNil=b("null or undefined",a.isNil),c.beNull=b("null",a.isNull),c.beVoid=b("undefined",a.isVoid),c.beString=b("string",a.isString),c.beBool=b("boolean",a.isBool),c.beNumber=b("int32 or float32",a.isNumber),c.beInt32=b("int32",a.isInt32),c.beFloat32=b("float32",a.isFloat32),c.beFunction=b("function",a.isFunction),c.beArray=b("array",a.isArray),c.beObject=b("object",a.isObject),c.beDate=b("date",a.isDate),c.beRegex=b("regexp",a.isRegex),c.beNode=b("DOMNode",a.isNode),c.beNodeList=b("DOMNodeList",a.isNodeList),c.beSequencial=b("sequencial",a.isSequencial),c.beEnumerable=b("enumerable",a.isEnumerable),c}),function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["../type"],b);else if("object"==typeof exports)module.exports=b(require("type"));else{c=b(a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a){var b={};return b.forEachWith=function c(b,d){if(a.isNotFunction(b))throw new Error("forEachWith expects fn to be function but saw "+b);if(void 0===d)return function(a){return c(b,a)};if(d=a.isSequencial(d)?[].slice.call(d):null,a.isNotArray(d))throw new Error("forEachWith expects list to be array but saw "+d);return d.forEach(b),d},b.mapWith=function d(b,c){if(a.isNotFunction(b))throw new Error("mapWith expects fn to be function but saw "+b);if(void 0===c)return function(a){return d(b,a)};if(c=a.isSequencial(c)?[].slice.call(c):null,a.isNotArray(c))throw new Error("mapWith expects list to be array but saw "+c);return c.map(b)},b.filterWith=function e(b,c){if(a.isNotFunction(b))throw new Error("filterWith expects fn to be function but saw "+b);if(void 0===c)return function(a){return e(b,a)};if(c=a.isSequencial(c)?[].slice.call(c):null,a.isNotArray(c))throw new Error("filterWith expects list to be array but saw "+c);return c.filter(b)},b.foldWith=function f(b,c,d){if(a.isNotFunction(b))throw new Error("foldWith expects fn to be function but saw "+b);if(void 0===c)return function(a,c){return f(b,a,c)};if(void 0===d)return function(a){return f(b,c,a)};if(c=a.isSequencial(c)?[].slice.call(c):null,a.isNotArray(c))throw new Error("foldWith expects list to be array but saw "+c);return c.reduce(b,d)},b.foldRightWith=function g(b,c,d){if(a.isNotFunction(b))throw new Error("foldRightWith expects fn to be function but saw "+b);if(void 0===c)return function(a,c){return g(b,a,c)};if(void 0===d)return function(a){return g(b,c,a)};if(c=a.isSequencial(c)?[].slice.call(c):null,a.isNotArray(c))throw new Error("foldRightWith expects list to be array but saw "+c);return c.reduceRight(b,d)},b.everyWith=function h(b,c){if(a.isNotFunction(b))throw new Error("everyWith expects fn to be function but saw "+b);if(void 0===c)return function(a){return h(b,a)};if(c=a.isSequencial(c)?[].slice.call(c):null,a.isNotArray(c))throw new Error("everyWith expects list to be array but saw "+c);return c.every(b)},b.someWith=function i(b,c){if(a.isNotFunction(b))throw new Error("someWith expects fn to be function but saw "+b);if(void 0===c)return function(a){return i(b,a)};if(c=a.isSequencial(c)?[].slice.call(c):null,a.isNotArray(c))throw new Error("someWith expects list to be array but saw "+c);return c.some(b)},b}),function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["../type","../arity"],b);else if("object"==typeof exports)module.exports=b(require("type"),require("arity"));else{c=b(a.funkyJS,a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a,b){function c(a){return function(b,c){if(a[c](b))return!0;throw new TypeError("passInputContracts(:item) mismatches contract "+a[c])}}function d(b){return b&&a.isArray(b.args)&&a.isFunction(b.proc)}function e(a){return function(b,c){return!!b(a[c])}}var f={};return f.hom=function g(d,e){if(void 0===d)return g;if(void 0===e)return function(a){return g(d,a)};if(a.isNotArray(d)||!d.every(a.isFunction))throw new Error("hom expects ins to be array but saw "+d);if(a.isNotFunction(e))throw new Error("hom expects out to be function but saw "+e);return function(f){if(a.isNotFunction(f))throw new Error("hom->f expects fn to be function but saw "+f);if(f.length!==d.length)throw new Error("hom->f aritiy of fn mismatches inputs length");return b.aritize(d.length)(function(a){var b;if(a.every(c(d))&&(b=f.apply(this,a)),!e(b))throw new Error("hom->f->f-> output mismatches contract: "+b);return b})}},f.multiDispatch=function(b){var c;if(a.isNotArray(b))throw new Error("multiDispatch expects argument to be array but saw "+b);return c=b.filter(d),function(){var b,d,f,g=[].slice.call(arguments);for(f=0;d=c[f];f+=1)if(!(d.args.length>0&&g.length!==d.args.length)&&d.args.every(e(g))&&(b=d.proc.apply(this,g),a.isFunction(d.out)&&d.out.call(this,b)))return b;return b}},f.displaceArgs=function h(b,c){if(a.isNotFunction(b))throw new Error("displaceArgs expects first argument to be function but saw "+b);if(void 0===c)return function(a){return h(b,a)};if(a.isNotArray(c))throw new Error("displaceArgs expects second argument to be array but saw "+c);if(b.length<c.length)throw new Error("displaceArgs(:array, :fn) Given functions arity is to low");return function(){var a=arguments,d=[];return c.forEach(function(b,c){d[c]=a[b]}),b.apply(this,d)}},f}),function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["../type","../array"],b);else if("object"==typeof exports)module.exports=b(require("type"),require("array"));else{c=b(a.funkyJS,a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a,b){var c={};return c.numIterator=function(b,c){var d=a.isNotInt32(b)?0:b,e=void 0===c?1/0:c,f=1;return d>e&&(f=-1),{next:function(){var a=d;return d+=f,a===e?{done:!0,value:a}:{done:!1,value:function(){return a}}}}},c.seqIterator=function(c){var d,e;if(a.isNotSequencial(c))throw new Error("seqIterator expected argument to be sequencial but saw "+c);return d=b.toArray(c),e=-1,{next:function(){return e+=1,e>=d.length?{done:!0,value:d[d.length-1]}:{done:!1,value:function(){return d[e]}}}}},c.objIterator=function(b){var c,d;if(a.isNotObject(b))throw new Error("objIterator expected argument to be object but saw "+b);return c=Object.keys(b),d=-1,{next:function(){return d+=1,d>=c.length?{done:!0,value:function(){return void 0}}:{done:!1,value:function(){return b[c[d]]}}}}},c.mapLazy=function d(b,c){if("function"!=typeof b)throw new Error("mapLazy expected first argument to be function but saw "+b);if(void 0===c)return function(a){return d(b,a)};if(a.isNotObject(c)||a.isNotFunction(c.next))throw new Error("mapLazy expected second argument to be iterator but was "+c);return{next:function(){var a=c.next();return a.done?{done:!0,value:a.value}:{done:!1,value:function(){return b(a.value())}}}}},c.filterLazy=function e(b,c){if("function"!=typeof b)throw new Error("filterLazy expected first argument to be function but saw "+b);if(void 0===c)return function(a){return e(b,a)};if(a.isNotObject(c)||a.isNotFunction(c.next))throw new Error("filterLazy expected second argument to be iterator but was "+c);return{next:function(){for(var a=c.next();!b(a.value())&&!a.done;)a=c.next();return a.done?a:{done:!1,value:function(){return a.value()}}}}},c.foldLazy=function f(b,c,d){var e;if("function"!=typeof b)throw new Error("foldLazy expected first argument to be function but saw "+b);if(void 0===c)return function(a,c){return f(b,a,c)};if(void 0===d)return function(a){return f(b,c,a)};if(a.isNotObject(c)||a.isNotFunction(c.next))throw new Error("foldLazy expected second argument to be iterator but was "+c);return e=d,{next:function(){var a=c.next();return a.done?{done:!0,value:a.value}:{done:!1,value:function(){return e=b(e,a.value())}}}}},c}),function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["../type"],b);else if("object"==typeof exports)module.exports=b(require("type"));else{c=b(a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a){var b={},c=function(a){this.exec=a};return c.is=function(a){return c.prototype.isPrototypeOf(a)},b.thunk=function(b){if(a.isNotFunction(b))throw new Error("Thunks cannot contain anything but functions");return new c(b)},b.trampoline=function(a){for(var b=a;c.is(b);)b=b.exec();return b},b}),function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["../type"],b);else if("object"==typeof exports)module.exports=b(require("type"));else{c=b(a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a){var b={};return b.trimLeft=function(b){if(a.isNotString(b))throw new Error("trimLeft expects str to be string but saw "+b);return b.replace(/^\s+/g,"")},b.trimRight=function(b){if(a.isNotString(b))throw new Error("trimRight expects str to be string but saw "+b);return b.replace(/\s+$/g,"")},b.trim=function(c){if(a.isNotString(c))throw new Error("trim expects str to be string but saw "+c);return b.trimLeft(b.trimRight(c))},b.camelize=function(b){if(a.isNotString(b))throw new Error("camelize expects str to be string but saw "+b);return b.replace(/-[A-Za-z]|_[A-Za-z]/g,function(a){return a[1].toUpperCase()+a.slice(2).toLowerCase()})},b.dasherize=function(b){if(a.isNotString(b))throw new Error("dasherize expects str to be string but saw "+b);return b.replace(/_[A-Za-z]|[A-Z]/g,function(a){return"-"+("_"===a[0]?a.slice(1).toLowerCase():a.toLowerCase())})},b.underscore=function(b){if(a.isNotString(b))throw new Error("underscore expects str to be string but saw "+b);return b.replace(/-[A-Za-z]|[A-Z]/g,function(a){return"_"+("-"===a[0]?a.slice(1).toLowerCase():a.toLowerCase())})},b.splitParse=function c(b,d,e){if(a.isNotFunction(b))throw new Error("splitParse expects fn to be function but saw "+b);if(void 0===d)return function(a,d){return c(b,a,d)};if(a.isNotString(d)&&a.isNotRegex(d))throw new Error("splitParse expects delimiter to be string or regexp but saw "+d);if(void 0===e)return function(a){return c(b,d,a)};if(a.isNotString(e))throw new Error("splitParse expects str to be string but saw "+e);return e.split(d).map(b)},b.substitude=function d(b,c){var e;if(a.isNotString(b))throw new Error("substitude expects str to be string but saw "+b);if(void 0===c)return function(a){return d(b,a)};if(a.isNotObject(c))throw new Error("substitude expects data to be object but saw "+c);return e=b,Object.keys(c).forEach(function(a){var b=new RegExp("(\\$\\{("+a+")\\})+?","g");e=e.replace(b,function(a){var b=a.slice(2,a.length-1);return c.hasOwnProperty(b)?c[b]:""})}),e},b}),function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["../type","../arrays","../objects"],b);else if("object"==typeof exports)module.exports=b(require("type"),require("arrays"),require("objects"));else{c=b(a.funkyJS,a.funkyJS,a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a,b,c){var d={};return d.instanceWith=function e(d,f){var g;if(a.isNotFunction(d))throw new Error("instanceWith expected Ctor to be function but saw "+d);return void 0===f?function(){return e.apply(this,b.append(arguments,[d]))}:(g=c.instance(d),b.tail(arguments).forEach(function(b){a.isObject(b)&&c.extend(g,b)}),g)},d});