/*! funkyjs-2 0.7.0
 *  David Hofmann <the.urban.drone@gmail.com, MIT license */
/* globals define, module, exports, require */!function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["./type","./arity"],b);else if("object"==typeof exports)module.exports=b(require("type"),require("arity"));else{c=b(a.funkyJS,a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a,b){var c={},d=function(a){return[].slice.apply(a,[].slice.call(arguments,1))},e=function(b){var c,f,g=[];for(b=d(b),f=0,c=b.length;c>f;f+=1)a.isArray(b[f])?g=g.concat(e(b[f])):g.push(b[f]);return g};return c.flip=function f(c){function e(a){return b.aritize(c.length-a.length,!0)(function(){var b=a.concat(d(arguments));return b.length<c.length?e(b):c.apply(this,b.reverse())})}if(arguments.length<1)return f;if(a.isNotFunction(c))throw new Error("Expected to wrap a function with flip but saw "+c);return e([])},c.fluent=function g(c){if(arguments.length<1)return g;if(a.isNotFunction(c))throw new Error("Expected to wrap a function with fluent but saw "+c);return b.aritize(c.length,!0)(function(){return c.apply(this,arguments),this})},c.guard=function h(c,d){if(arguments.length<1)return h;if(arguments.length<2)return function(a){return h(c,a)};if(a.isNotFunction(c))throw new Error("Expected to guard with a function but saw "+c);if(a.isNotFunction(d))throw new Error("Expected to guard a function but saw "+d);return b.aritize(d.length,!0)(function(){return c.apply(null,arguments)?d.apply(this,arguments):null})},c.maybe=function i(c){if(arguments.length<1)return i;if(a.isNotFunction(c))throw new Error("Expected to maybe execute a function but saw "+c);return b.aritize(c.length)(function(b){return b.every(a.isNotNil)?c.apply(this,b):null})},c.not=function j(c){if(arguments.length<1)return j;if(a.isNotFunction(c))throw new Error("Expected to negate a function but saw "+c);return b.aritize(c.length,!0)(function(){return!c.apply(this,arguments)})},c.splat=function k(c){if(arguments.length<1)return k;if(a.isNotFunction(c))throw new Error("Expected to splat a function but saw "+c);return b.aritize(c.length,!0)(function(){return 1===arguments.length&&a.isArray(arguments[0])?arguments[0].map(c,this):e(arguments).map(c,this)})},c.debounce=function l(c,d){var e;if(arguments.length<1)return l;if(arguments.length<2){if(a.isInt32(c))return function(a){return l(c,a)};if(a.isNotFunction(c))throw new Error("Expected to debounce a function but saw "+c+" / "+d);d=c,c=250}if(a.isNotInt32(c))throw new Error("Ticks to debounce must be given as 32 bit integer");if(a.isNotFunction(d))throw new Error("Expected to debounce a function but instead saw "+d);return b.aritize(d.length)(function(){var b=arguments;clearTimeout(e),e=setTimeout(function(){d.apply(this,b)}.bind(this),a.isInt32(c)?c:250)})},c.memoize=function m(b){function c(){var d=JSON.stringify(arguments);return a.isNil(c.cache[d])&&(c.cache[d]=b.apply(this,arguments)),c.cache[d]}if(arguments.length<1)return m;if(a.isNotFunction(b))throw new Error("Expected to memoize a function but saw "+b);return c.cache={},c},c});