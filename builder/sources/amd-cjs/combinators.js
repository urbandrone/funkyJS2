/*! funkyjs-2 2.1.0
 *  David Hofmann <the.urban.drone@gmail.com>, MIT license */
/* globals define, module, exports, require */
!function(a,b){var c,d;if("function"==typeof define&&define.amd)define(["./type","./arity"],b);else if("object"==typeof exports)module.exports=b(require("type"),require("arity"));else{c=b(a.funkyJS,a.funkyJS);for(d in c)c.hasOwnProperty(d)&&(a.funkyJS[d]=c[d])}}(this,function(a,b){var c={},d=function(a){return[].slice.apply(a,[].slice.call(arguments,1))},e=function(a,b){return!!b.apply(this,a)};return c.compose=function f(){var c;if(arguments.length<1)return f;if(c=d(arguments).filter(a.isFunction),c.length<1)throw"Expected at least one function to compose but found none";return b.aritize(c[c.length-1].length)(function(a){return c.reduceRight(function(a,b){return[b.apply(this,a)]},a,this)[0]})},c.pipe=function g(){var c;if(arguments.length<1)return g;if(c=d(arguments).filter(a.isFunction),c.length<1)throw"Expected at least one function to pipe but found none";return b.aritize(c[0].length)(function(a){return c.reduce(function(a,b){return[b.apply(this,a)]},a,this)[0]})},c.and=function h(){var c,f;if(arguments.length<1)return h;if(c=d(arguments).filter(a.isFunction),f=Math.max.apply(Math,c.map(function(a){return a.length})),c.length<1)throw"and expected at least two functions but found none";return b.aritize(f)(function(a){return c.every(e.bind(this,a))})},c.or=function i(){var c,f;if(arguments.length<1)return i;if(c=d(arguments).filter(a.isFunction),f=Math.max.apply(Math,c.map(function(a){return a.length})),c.length<1)throw"or expected at least two functions but found none";return b.aritize(f)(function(a){return c.some(e.bind(this,a))})},c.splat=function j(c){if(arguments.length<1)return j;if(!a.isArray(c)||!c.every(a.isFunction))throw"splat expects arguments to be array of functions but saw "+c;return b.aritize(c.reduce(function(a,b){return Math.max(a,b.length)},0))(function(a){return c.map(function(b){return b.apply(this,a)},this)})},c});